set(TARGET_NAME serial)


set(AUTOGEN_DISCLAIMER "/* WARNING: Autogenerated file, do not edit. All changes will be lost. */")
set(REPO_FOLDER ${PROJECT_SOURCE_DIR})

set(${TARGET_NAME}_HEADERS
  reflexion/Reflexion.h
  reflexion/Reflexion_impl.h
  serialization/Serialization.h
  serialization/Json.h
  serialization/JsonWitness.h
  catch.hpp
  ReflexionFunctions.h
  SnacArchive.h
)

set(${TARGET_NAME}_SOURCES
    main.cpp
    serialization/Json.cpp
    Json.cpp
)

source_group(TREE ${CMAKE_CURRENT_LIST_DIR}
             FILES ${${TARGET_NAME}_HEADERS} ${${TARGET_NAME}_SOURCES}
)

add_executable(${TARGET_NAME}
               ${${TARGET_NAME}_SOURCES}
               ${${TARGET_NAME}_HEADERS}
)

if(MSVC)
    # Otherwise GameScene-setup.cpp errors:
    # "fatal  error C1128: number of sections exceeded object file format limit: compile with /bigobj"
    target_compile_options(${TARGET_NAME} PRIVATE "/bigobj")
endif()

cmc_target_current_include_directory(${TARGET_NAME} ADD_BINARY_DIR PRIVATE)

set_target_properties(${TARGET_NAME} PROPERTIES
                      VERSION "${${PROJECT_NAME}_VERSION}"
)

option(BUILD_SNACMAN_DEVMODE "Build with all devmode features enabled." OFF)
if(BUILD_SNACMAN_DEVMODE)
    target_compile_definitions(${TARGET_NAME} PRIVATE "SNACMAN_DEVMODE")
else()
    target_compile_definitions(${TARGET_NAME} PRIVATE "DBGDRAW_ACTIVE_LEVEL=::ad::snac::DebugDrawer::Level::off")
endif()

cmc_cpp_all_warnings_as_errors(${TARGET_NAME} ENABLED ${BUILD_CONF_WarningAsError})

cmc_cpp_sanitizer(${TARGET_NAME} ${BUILD_CONF_Sanitizer})


##
## Dependencies
##

find_package(Entity CONFIG REQUIRED entity)
find_package(Math CONFIG REQUIRED math)
find_package(Handy CONFIG REQUIRED platform)
find_package(Reflexion CONFIG REQUIRED reflexion)

find_package(nlohmann_json 3.11.2 CONFIG REQUIRED)
find_package(spdlog CONFIG REQUIRED)

target_link_libraries(${TARGET_NAME}
    PRIVATE
        ad::reflexion
        ad::entity
        ad::math
        ad::platform

        spdlog::spdlog
        nlohmann_json::nlohmann_json
)


##
## Install
##

install(TARGETS ${TARGET_NAME})
