set(TARGET_NAME refactor_proto)

set(AUTOGEN_DISCLAIMER "/* WARNING: Autogenerated file, do not edit. All changes will be lost. */")
set(REPO_FOLDER ${PROJECT_SOURCE_DIR})
configure_file(build_info.h.in build_info.h @ONLY)

set(${TARGET_NAME}_HEADERS
    DrawQuad.h
    Json.h
    Logging.h
    Scene.h
    SceneGui.h
    TheGraph.h
    ViewerApplication.h
)

set(${TARGET_NAME}_SOURCES
    main.cpp

    DrawQuad.cpp
    Logging.cpp
    Scene.cpp
    SceneGui.cpp
    TheGraph.cpp
    ViewerApplication.cpp
)

source_group(TREE ${CMAKE_CURRENT_LIST_DIR}
             FILES ${${TARGET_NAME}_HEADERS} ${${TARGET_NAME}_SOURCES}
)

source_group(generated FILES ${CMAKE_CURRENT_BINARY_DIR}/build_info.h)

add_executable(${TARGET_NAME}
               ${${TARGET_NAME}_SOURCES}
               ${${TARGET_NAME}_HEADERS}
               # Not listed in headers, as it cannot be grouped by "source_group"
               ${CMAKE_CURRENT_BINARY_DIR}/build_info.h
)

if(MSVC)
    # Otherwise big object files might error with:
    # "fatal  error C1128: number of sections exceeded object file format limit: compile with /bigobj"
    target_compile_options(${TARGET_NAME} PRIVATE "/bigobj")
endif()


cmc_target_current_include_directory(${TARGET_NAME} ADD_BINARY_DIR PRIVATE)

set_target_properties(${TARGET_NAME} PROPERTIES
                      VERSION "${${PROJECT_NAME}_VERSION}"
)


cmc_cpp_all_warnings_as_errors(${TARGET_NAME} ENABLED ${BUILD_CONF_WarningAsError})

cmc_cpp_sanitizer(${TARGET_NAME} ${BUILD_CONF_Sanitizer})

file(GENERATE 
     OUTPUT $<TARGET_FILE_DIR:${TARGET_NAME}>/assets.json
     CONTENT "{\"prefixes\": [\"${REPO_FOLDER}/src/libs/snac-renderer-V2/snac-renderer-V2/resources/\",
                              \"${REPO_FOLDER}/../snac-assets/\"]}")


##
## Dependencies
##


find_package(Graphics CONFIG REQUIRED graphics imguiui renderer)
find_package(Math CONFIG REQUIRED math)
find_package(Handy CONFIG REQUIRED handy)


#find_package(nlohmann_json 3.11.2 CONFIG REQUIRED)
find_package(spdlog CONFIG REQUIRED)

target_link_libraries(${TARGET_NAME}
    PRIVATE
        ad::graphics
        ad::handy
        ad::imguiui
        ad::math
        ad::profiler
        ad::renderer
        ad::snac-renderer-V2
        ad::utilities

        spdlog::spdlog
        #nlohmann_json::nlohmann_json
)


##
## Install
##

install(TARGETS ${TARGET_NAME})
